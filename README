This repository contains scripts and files needed to generate the python
parser for Modelica. Description of individual files follows:

astdump.py

This simple script takes a python file as input and generates it's
abstract syntax tree which is then dumped to stdout. This is done using
the built-in ast library. An example output is in the tst.ast file.
Note, that in order for this to work with the other components, Python
version 3.4 is required.

agformat.py

This script actually generates the parser, Absyn module and lexer for
the translator. It takes names of theese output files as arguments in
the above order. Files Absyn.head.mo, Absyn.tail.mo and lexer.head.mo,
lexer.tail.mo are prepended and appended respectively to the optput
generated by the script. The script contains the grammar of the
abstrac syntax tree produced by astdump.py and it contains some small
differences from the abstract grammar in ast library documentation
https://docs.python.org/3.4/library/ast.html#abstract-grammar . All
the changes are documented in it's source code, but special care must
be taken if there are changes to the abstract grammar in some future
version of Python.

Sample generated files can be found in the generatedfiles directory.

testcases

The testcases directory contains test cases to the translator, so it
is not directly related to parsing python, but of course, in order
for the translator to work, they must be parsed first. They should
be converted by the astdump.py script prior to being inputted to the
translator. The *.py files are the unconverted input and corresponding
*.mo files are the desired output of the translator. See the document
translation_guidelines.pdf for details about how the test cases are
constructed.

